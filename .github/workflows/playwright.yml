name: Playwright Tests

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🎭 Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: 🧪 Run Playwright tests
        run: npx playwright test --reporter=html

      # === 1️⃣ Сохраняем отчёт как артефакт ===
      - name: 📁 Upload Playwright HTML Report as artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7

      # === 2️⃣ Исправляем base href для корректных ссылок ===
      - name: 🛠 Fix report base path for GitHub Pages
        if: success()
        run: |
          REPO="${{ github.repository }}"
          BASE_PATH="${REPO#*/}"
          sed -i "s|<head>|<head><base href='/${BASE_PATH}/playwright-report/'>|" playwright-report/index.html

      # === 3️⃣ Создаём корневую страницу index.html с динамическим временем ===
      - name: 🪄 Create root index.html for Pages
        if: success()
        run: |
          mkdir -p root-page
          REPO="${{ github.repository }}"
          REPORT_URL="https://${REPO%%/*}.github.io/${REPO#*/}/playwright-report/"
          LAST_RUN="$(date -u +"%Y-%m-%d %H:%M UTC")"
          cat > root-page/index.html <<EOF
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Playwright Test Dashboard</title>
            <style>
              body { font-family: system-ui, sans-serif; display: flex; flex-direction: column; align-items: center; justify-content: center; height: 100vh; background: #f6f8fa; color: #24292f; }
              h1 { font-size: 2rem; margin-bottom: 0.5rem; }
              p { font-size: 1rem; margin: 0.3rem 0; }
              a { display: inline-block; margin-top: 20px; padding: 12px 20px; background: #28a745; color: white; text-decoration: none; border-radius: 6px; font-weight: 600; }
              a:hover { background: #2ea44f; }
              footer { margin-top: 2rem; font-size: 0.85rem; color: #6a737d; }
            </style>
          </head>
          <body>
            <h1>🚀 Playwright Tests</h1>
            <p><strong>Status:</strong> ✅ Passed</p>
            <p><strong>Last run:</strong> ${LAST_RUN}</p>
            <a href="${REPORT_URL}">View Full HTML Report</a>
            <footer>📦 Repo: ${REPO}</footer>
          </body>
          </html>
          EOF

      # === 4️⃣ Деплой на GitHub Pages ===
      - name: 🚀 Deploy root page and report to GitHub Pages
        if: success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: root-page
          keep_files: true
          force_orphan: false
          commit_message: "Deploy root page"
      - name: 📄 Upload Playwright HTML report folder
        if: success()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: playwright-report
          destination_dir: playwright-report
          keep_files: true
          commit_message: "Deploy Playwright HTML Report 🚀"

      # === 5️⃣ Генерация ссылки ===
      - name: 🌐 Prepare report URL
        if: success()
        run: |
          REPO="${{ github.repository }}"
          REPORT_URL="https://${REPO%%/*}.github.io/${REPO#*/}/"
          echo "REPORT_URL=$REPORT_URL" >> $GITHUB_ENV
          echo "✅ Report available at: $REPORT_URL"

      # === 6️⃣ Комментарий в PR ===
      - name: 💬 Post or update comment on PR
        if: success() && github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "🧪 Playwright Test Report"
          message: |
            ✅ **Playwright tests completed successfully!**
            🔗 [Open the latest HTML report here](${{ env.REPORT_URL }})

            📦 You can also download the full HTML report as an artifact from the “Actions” tab.
            _This comment updates automatically on each workflow run._
